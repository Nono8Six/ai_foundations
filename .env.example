# ==============================================================================
# Variables d'environnement pour AI Foundations
# Copiez ce fichier en .env et configurez-le. NE PAS COMMITTER .env !
# ==============================================================================

# ─── Supabase Cloud Configuration ─────────────────────────────────────────────
# Utilisé par le frontend pour se connecter à votre instance Supabase Cloud
# et par la CLI Supabase locale pour `db pull`, `gen:types`, etc.
# Remplacez <your-project-ref> par la référence de votre projet Supabase.
# Les clés sont disponibles dans "Project Settings" > "API" sur app.supabase.com
VITE_SUPABASE_URL=https://<your-project-ref>.supabase.co
VITE_SUPABASE_ANON_KEY=your-supabase-anon-key

# Token d'accès personnel pour la CLI Supabase.
# À générer sur app.supabase.com/account/tokens. Nécessaire pour `supabase db pull`.
SUPABASE_ACCESS_TOKEN=your-personal-access-token

# Référence de votre projet Supabase (le même que dans VITE_SUPABASE_URL).
# Utilisé par certains scripts CLI ou si la liaison n'est pas active.
SUPABASE_PROJECT_REF=<your-project-ref>

# ─── Variables Optionnelles pour l'instance Supabase Locale (via `pnpm db:start`) ───
# Ces variables sont généralement gérées par la CLI Supabase elle-même lors de `supabase start`.
# Vous n'avez normalement PAS besoin de les définir ici, sauf pour des configurations très spécifiques.
# La CLI Supabase utilise des valeurs par défaut sécurisées pour l'environnement local.
# SUPABASE_DB_PASSWORD=your-local-postgres-password # Mot de passe pour la DB locale (par défaut: postgres)
# SUPABASE_JWT_SECRET=your-local-jwt-secret-at-least-32-chars-long # Secret pour les JWT locaux

# ─── Configuration de l'Application Frontend ──────────────────────────────────
VITE_APP_NAME="AI Foundations"
VITE_APP_ENV="development" # ou "production", "staging"

# ─── Debug & Logs Frontend ────────────────────────────────────────────────────
VITE_DEBUG=true
VITE_LOG_LEVEL="debug" # Options: "debug", "info", "warn", "error"

# ─── Configuration Optionnelle du Backend API Node.js ─────────────────────────
# Si vous activez le service `backend-api` dans docker-compose.yml
# PORT=3001
# DATABASE_URL= # Si votre API Node.js a besoin d'un accès direct à une base de données
# DIRECT_URL=   # Idem pour Prisma, par exemple
# SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key # À utiliser avec grande prudence côté serveur
