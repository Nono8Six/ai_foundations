networks:
  app-network:
    driver: bridge

volumes:
  pnpm-store:
  node_modules_frontend:
  node_modules_backend:
  portainer_data:

services:
  # ===========================================
  # FRONTEND - React/Vite
  # ===========================================
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: ai-foundations-frontend
    working_dir: /app
    volumes:
      - .:/app
      - node_modules_frontend:/app/apps/frontend/node_modules
      - pnpm-store:/root/.local/share/pnpm
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      # Variables Supabase Cloud
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_DEBUG=${VITE_DEBUG}
      - VITE_APP_NAME=${VITE_APP_NAME}
    command: |
      sh -c "
        echo 'ðŸ”§ Installation des dÃ©pendances...' &&
        pnpm install &&
        echo 'ðŸš€ DÃ©marrage du frontend...' &&
        cd apps/frontend &&
        pnpm dev --host 0.0.0.0 --port 3000
      "
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===========================================
  # BACKEND - Node.js API (optionnel si tout est sur Supabase)
  # ===========================================
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: ai-foundations-backend
    working_dir: /app
    volumes:
      - .:/app
      - node_modules_backend:/app/apps/backend/node_modules
      - pnpm-store:/root/.local/share/pnpm
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      # Variables Supabase Cloud
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - DIRECT_URL=${DIRECT_URL}
    command: |
      sh -c "
        echo 'ðŸ”§ Installation des dÃ©pendances backend...' &&
        pnpm install &&
        echo 'ðŸš€ DÃ©marrage du backend...' &&
        cd apps/backend &&
        pnpm dev
      "
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    profiles: ["backend"]  # Optionnel, activÃ© avec --profile backend

  # ===========================================
  # SUPABASE CLI - Pour synchronisation
  # ===========================================
  supabase-cli:
    image: supabase/cli:latest
    container_name: ai-foundations-supabase-cli
    volumes:
      - ./apps/backend:/workspace
      - ~/.supabase:/root/.supabase
    working_dir: /workspace
    environment:
      - SUPABASE_ACCESS_TOKEN=${SUPABASE_ACCESS_TOKEN}
      - SUPABASE_PROJECT_REF=${SUPABASE_PROJECT_REF}
      - SUPABASE_DB_PASSWORD=${SUPABASE_DB_PASSWORD}
    command: sleep infinity
    networks:
      - app-network
    profiles: ["tools"]  # ActivÃ© avec --profile tools

  # ===========================================
  # MONITORING (optionnel)
  # ===========================================
  portainer:
    image: portainer/portainer-ce:latest
    container_name: ai-foundations-portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - app-network
    restart: unless-stopped
    profiles: ["monitoring"]