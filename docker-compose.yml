# Réseau personnalisé pour une meilleure isolation
networks:
  app-network:
    driver: bridge

# Volumes pour la persistance des données
volumes:
  postgres_data:
  pgadmin-data:

services:
  # -------------------------------------------------------------------
  # Application Frontend
  # -------------------------------------------------------------------
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development  # Utilise le stage de développement par défaut
    container_name: ai-foundations-frontend
    working_dir: /app
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - /app/node_modules
      - /app/apps/frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_DEBUG=true
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------------------------------------
  # Base de données PostgreSQL + PostGIS (local)
  # -------------------------------------------------------------------
  db:
    image: postgis/postgis:15-3.4
    container_name: ai-foundations-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${LOCAL_DB_PASSWORD:-postgres}
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------------------------------------
  # Interface d'administration de la base de données (optionnel)
  # -------------------------------------------------------------------
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ai-foundations-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------------------------------------
  # -------------------------------------------------------------------
  # Outil CLI Supabase pour la synchronisation cloud/local
  # -------------------------------------------------------------------
  supabase_cli:
    image: ghcr.io/supabase/cli:1.153.0
    container_name: ai-foundations-supabase-cli
    profiles: ["tools"]
    volumes:
      - ./supabase:/supabase
    working_dir: /supabase
    entrypoint: ["sleep", "infinity"]
    networks:
      - app-network
    environment:
      SUPABASE_ACCESS_TOKEN: ${SUPABASE_ACCESS_TOKEN}
      SUPABASE_PROJECT_REF: ${SUPABASE_PROJECT_REF}
      SUPABASE_DB_PASSWORD: ${SUPABASE_DB_PASSWORD}
      SUPABASE_JWT_SECRET: ${SUPABASE_JWT_SECRET}

  # Service de surveillance (optionnel)
  # -------------------------------------------------------------------
  # Décommentez pour activer Portainer (interface de gestion des conteneurs)
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   container_name: portainer
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - app-network

# Configuration des politiques de redémarrage
x-restart-policy: &restart-policy
  restart: unless-stopped

# Configuration des logs
x-logging: &default-logging
  logging:
    driver: json-file
    options:
      max-size: "10m"
      max-file: "3"

