import{m as Q,r as v,n as C,o as f,s as d,p as g,q as M}from"./index-BEJWkrpI.js";const y=M;function q(t,a,{limit:n=10,order:o="desc",filters:c={}}={}){const w=Q(),p=v.useMemo(()=>JSON.stringify(c),[c]),S=v.useMemo(()=>[t,a,{limit:n,order:o,filters:p}],[t,a,n,o,p]),m=C({queryKey:S,enabled:!!a,gcTime:5*60*1e3,queryFn:async()=>{let e=y.from(t).select("*");a&&(e=e.eq("user_id",a));for(const[r,u]of Object.entries(c))u!==void 0&&(e=e.eq(r,u));e=e.order("created_at",{ascending:o==="asc"}),e=e.limit(n);const{data:s,error:i}=await d(async()=>{const r=await e;return{data:r.data,error:r.error}});if(i)throw i;return s??[]}}),l=()=>w.invalidateQueries({queryKey:[t,a]}),h=f({mutationFn:async e=>{const s=e,i=await d(async()=>{const r=await y.from(t).insert(s).select().single();return{data:r.data,error:r.error}});return g(i)},onSuccess:l}),A=f({mutationFn:async({id:e,updates:s})=>{const i=s,r=await d(async()=>{const u=await y.from(t).update(i).eq("id",e).select().single();return{data:u.data,error:u.error}});return g(r)},onSuccess:l}),F=f({mutationFn:async e=>{const{error:s}=await d(async()=>({data:null,error:(await y.from(t).delete().eq("id",e)).error}));if(s)throw s},onSuccess:l});return{data:m.data??[],loading:m.isLoading,error:m.error??null,create:h.mutateAsync,update:A.mutateAsync,remove:F.mutateAsync}}function x(t,a={}){const{data:n,loading:o,error:c}=q("activity_log",t,a);return{activities:n,loading:o,error:c}}function K(t,a={}){const{data:n,loading:o,error:c}=q("achievements",t,a);return{achievements:n,loading:o,error:c}}export{K as a,x as u};
