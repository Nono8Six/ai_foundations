import{k as Q,r as w,m as x,n as f,s as d,o as q,p as C}from"./index-muy6mdYR.js";const y=C;function h(t,a,{limit:n=10,order:o="desc",filters:c={}}={}){const v=Q(),u=w.useMemo(()=>JSON.stringify(c),[c]),m=w.useMemo(()=>[t,a,{limit:n,order:o,filters:u}],[t,a,n,o,u]),l=x({queryKey:m,enabled:!!a,gcTime:5*60*1e3,queryFn:async()=>{let e=y.from(t).select("*");e=e.eq("user_id",a);for(const[i,g]of Object.entries(c))g!==void 0&&(e=e.eq(i,g));e=e.order("created_at",{ascending:o==="asc"}),e=e.limit(n);const{data:r,error:s}=await d(async()=>{const i=await e;return{data:i.data,error:i.error}});if(s)throw s;return r??[]}}),p=()=>v.invalidateQueries({queryKey:[t,a]}),S=f({mutationFn:async e=>{const r=await d(async()=>{const s=await y.from(t).insert(e).select().single();return{data:s.data,error:s.error}});return q(r)},onSuccess:p}),A=f({mutationFn:async({id:e,updates:r})=>{const s=await d(async()=>{const i=await y.from(t).update(r).eq("id",e).select().single();return{data:i.data,error:i.error}});return q(s)},onSuccess:p}),F=f({mutationFn:async e=>{const{error:r}=await d(async()=>({data:null,error:(await y.from(t).delete().eq("id",e)).error}));if(r)throw r},onSuccess:p});return{data:l.data??[],loading:l.isLoading,error:l.error??null,create:S.mutateAsync,update:A.mutateAsync,remove:F.mutateAsync}}function _(t,a={}){const{data:n,loading:o,error:c}=h("activity_log",t,a);return{activities:n,loading:o,error:c}}function K(t,a={}){const{data:n,loading:o,error:c}=h("achievements",t,a);return{achievements:n.map(({xp_reward:u,...m})=>({...m,xpReward:u})),loading:o,error:c}}export{K as a,_ as u};
//# sourceMappingURL=useAchievements-DhcAPkjP.js.map
